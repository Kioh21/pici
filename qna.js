const lesson1 = [
    { question: "What is 2 + 2?", options: ["3", "4", "5"], correct: "4" },
    { question: "Capital of Japan?", options: ["Kyoto", "Osaka", "Tokyo"], correct: "Tokyo" },
    { question: "How many sides does a triangle have?", options: ["3", "4", "5"], correct: "3" }
];

const lesson2 = [
    {
        question: "Áå´„ÅÆÈÄ≤Âåñ„Å®Ê≠¥Âè≤„Å´Èñ¢„Åô„ÇãË®òËø∞„Å®„Åó„Å¶„ÄÅÊ≠£„Åó„ÅÑ„ÅÆ„ÅØ„Å©„Çå„Åã„ÄÇ",
        options: ["„Åô„Åπ„Å¶„ÅÆ„Éç„Ç≥ÁßëÂãïÁâ©„ÅØÂçòÁã¨„ÅßÁîüÊ¥ª„Åó„ÄÅÈõÜÂõ£„Çí„Å§„Åè„Çâ„Å™„ÅÑ„ÄÇ",
            "Áä¨„Å®Áå´„Åß„ÅØ„ÄÅÂÆ∂ÁïúÂåñ„Åï„Çå„Åü„ÅÆ„ÅØÁå´„ÅÆ„Åª„ÅÜ„ÅåÊó©„ÅÑ„ÄÇ",
            "Áå´„ÅØÂè§‰ª£„Ç®„Ç∏„Éó„Éà„ÅßÊÄù„ÅøÂ´å„Çè„Çå„Åü„Åü„ÇÅ„ÄÅÂ§öÊï∞„Åå„Éü„Ç§„É©„Å´„Åï„Çå„Åü„Å®„Åø„Çâ„Çå„Çã„ÄÇ",
            "Êó•Êú¨„ÅßÁå´„Çí„Éö„ÉÉ„Éà„Å®„Åó„Å¶È£º„ÅÜ„Çà„ÅÜ„Å´„Å™„Å£„Åü„ÅÆ„ÅØ„ÄÅÊ±üÊà∏ÊôÇ‰ª£„ÅÆÂ∫∂Ê∞ë„Åß„ÅÇ„Å£„Åü„ÄÇ",
            "„Éü„Éà„Ç≥„É≥„Éâ„É™„Ç¢DNA„ÅÆËß£Êûê„Å´„Çà„Çä„ÄÅÁå´„ÅÆÁ•ñÂÖà„ÅØ„É™„Éì„Ç¢„É§„Éû„Éç„Ç≥„Åß„ÅÇ„Çã„Åì„Å®„ÅåÁ¢∫Ë™ç„Åï„Çå„Åü„ÄÇ"],
        correct: "„Éü„Éà„Ç≥„É≥„Éâ„É™„Ç¢DNA„ÅÆËß£Êûê„Å´„Çà„Çä„ÄÅÁå´„ÅÆÁ•ñÂÖà„ÅØ„É™„Éì„Ç¢„É§„Éû„Éç„Ç≥„Åß„ÅÇ„Çã„Åì„Å®„ÅåÁ¢∫Ë™ç„Åï„Çå„Åü„ÄÇ"
    },
    {
        question: "Á¥îË°ÄÁ®Æ„ÅÆÁå´„Å´Èñ¢„Åô„ÇãË®òËø∞„Å®„Åó„Å¶„ÄÅÊ≠£„Åó„ÅÑ„ÅÆ„ÅØ„Å©„Çå„Åã„ÄÇ",
        options: ["„Ç¢„Éì„Ç∑„Éã„Ç¢„É≥„Å®„Çπ„Ç≥„ÉÜ„Ç£„ÉÉ„Ç∑„É•„Éï„Ç©„Éº„É´„Éâ„ÅØ„ÄÅ„Å©„Å°„Çâ„ÇÇÁü≠ÊØõÁ®Æ„Åß„ÅÇ„Çã„ÄÇ",
            "Êó•Êú¨„ÅßÁèæÂú®‰∏ÄÁï™Â§ö„ÅèÈ£º„Çè„Çå„Å¶„ÅÑ„ÇãÁü≠ÊØõÁ®Æ„ÅÆÁå´„ÅØ„ÄÅ„Çµ„Ç§„Ç¢„Éü„Éº„Ç∫Ôºà„Ç∑„É£„É†Ôºâ„Å®„Éê„Éº„Éü„Éº„Ç∫„Åß„ÅÇ„Çã„ÄÇ",
            "Á¥îË°ÄÁ®Æ„ÅÆÁå´„ÅÆÊó•Êú¨„Åß„ÅÆÈ£ºËÇ≤Áéá„ÅØ„ÄÅ6Ââ≤Á®ãÂ∫¶„Åß„ÅÇ„Çã„ÄÇ",
            "„Ç¢„É°„É™„Ç´„É≥„Ç´„Éº„É´„ÇÑ„Éû„É≥„ÉÅ„Ç´„É≥„ÅØ„ÄÅËÄ≥„ÅÆÂ§âÂΩ¢„ÅåÁâπÂæ¥ÁöÑ„Å™Áå´Á®Æ„Åß„ÅÇ„Çã„ÄÇ",
            "„É©„Ç∞„Éâ„Éº„É´„ÇÑ„É°„Ç§„É≥„ÇØ„Éº„É≥„ÅØ„ÄÅÁå´„ÅÆÂìÅÁ®Æ„Å®„Åó„Å¶Â§ßÂûã„Åß„ÅÇ„Çã„ÄÇ"],
        correct: "„É©„Ç∞„Éâ„Éº„É´„ÇÑ„É°„Ç§„É≥„ÇØ„Éº„É≥„ÅØ„ÄÅÁå´„ÅÆÂìÅÁ®Æ„Å®„Åó„Å¶Â§ßÂûã„Åß„ÅÇ„Çã„ÄÇ"
    },
    {
        question: "„Ç∑„É£„É≥„Éó„Éº„Å´Èñ¢„Åô„ÇãË®òËø∞„Å®„Åó„Å¶„ÄÅÊ≠£„Åó„ÅÑ„ÅÆ„ÅØ„Å©„Çå„Åã„ÄÇ",
        options: ["Áå´„ÅÆÁà™„ÅØÂÆâÂÖ®„Å™„ÅÆ„Åß„ÄÅÊúÄÂæå„Å´Âàá„Çã„ÄÇ",
            "Áå´„ÅÆÊèõÊØõÊúü„ÅØÊó•ÁÖßÊôÇÈñì„ÅåÈï∑„Åè„Å™„ÇãÊò•„Åã„ÇâÂ§è„Å´„Åã„Åë„Å¶Â§ö„ÅèÁô∫Áîü„Åó„ÄÅÊâãÂÖ•„Çå„Å®„Åó„Å¶„Ç∑„É£„É≥„Éó„Éº„ÅåÂøÖË¶Å„Åß„ÅÇ„Çã„ÄÇ",
            "ÂÆ§ÂÜÖÈ£ºËÇ≤„Åß„ÄÅÈÅéÂâ∞„Å´„Çª„É´„Éï„Ç∞„É´„Éº„Éü„É≥„Ç∞„ÇíË°å„ÅÜÁå´„ÅÆÂ†¥Âêà„ÄÅ„Éñ„É©„ÉÉ„Ç∑„É≥„Ç∞„ÇÑ„Ç≥„Éº„Éü„É≥„Ç∞„Çí„Åó„Å™„Åè„Å¶„ÇÇ„Çà„ÅÑ„ÄÇ",
            "„É™„É≥„ÇπÂâ§„ÅÆÊøÉÂ∫¶„ÅØ„ÄÅ„Ç∑„É≥„Ç∞„É´„Ç≥„Éº„Éà„ÅÆÁü≠ÊØõÁ®Æ„ÅØËñÑ„ÇÅ„Å´Â∏åÈáà„ÅóÈï∑ÊØõÁ®Æ„ÅØÊøÉ„ÅÑ„ÇÅ„Å´Â∏åÈáà„Åô„Çã„ÄÇ",
            "Áå´„Å´„ÇÇËÇõÈñÄËÖ∫„ÅØ„ÅÇ„Çã„Åå„ÄÅÁå´„ÅØÂ∏∏„Å´Ëàê„ÇÅ„Å¶„ÅÑ„Çã„Åü„ÇÅËÇõÈñÄËÖ∫„ÅØÁµû„Çâ„Å™„ÅÑ„ÄÇ"],
        correct: "Áå´„ÅÆÊèõÊØõÊúü„ÅØÊó•ÁÖßÊôÇÈñì„ÅåÈï∑„Åè„Å™„ÇãÊò•„Åã„ÇâÂ§è„Å´„Åã„Åë„Å¶Â§ö„ÅèÁô∫Áîü„Åó„ÄÅÊâãÂÖ•„Çå„Å®„Åó„Å¶„Ç∑„É£„É≥„Éó„Éº„ÅåÂøÖË¶Å„Åß„ÅÇ„Çã„ÄÇ"
    }
];

const lesson3 = [
    { question: "What is 5 x 5?", options: ["10", "25", "15"], correct: "25" },
    { question: "Square root of 49?", options: ["6", "7", "8"], correct: "7" }
];

const lessonMap = {
    1: lesson1,
    2: lesson2,
    3: lesson3
};

const lessonNames = {
    1: "Á¨¨‰∏ÄÁ´†",
    2: "Á¨¨‰∫åÁ´†",
    3: "Á¨¨‰∏âÁ´†"
};

let lessonScope = [];
try {
    const stored = localStorage.getItem("lessonScope");
    lessonScope = stored ? JSON.parse(stored) : [];
    if (!Array.isArray(lessonScope)) {
        // If parsed data is not an array, reset to empty
        lessonScope = [];
    }
} catch (e) {
    console.error("Error reading lessonScope from localStorage:", e);
    lessonScope = [];
}

const selectedLessonNames = lessonScope.length > 0
    ? lessonScope.map(id => lessonNames[id] || `Unknown(${id})`).join(", ")
    : "None";

const quizData = lessonScope.flatMap(id => lessonMap[id] || []);

function shuffle(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
}

shuffle(quizData);

let currentQuestion = 0;
let score = 0;

const questionEl = document.getElementById("question");
const formEl = document.getElementById("quiz-form");
const nextBtn = document.getElementById("next-btn");
const resultEl = document.getElementById("result");
const savedScoreEl = document.getElementById("saved-score");

function loadQuestion() {
    const q = quizData[currentQuestion];
    questionEl.textContent = q.question;
    formEl.innerHTML = "";

    // üîÄ Copy and shuffle options
    const shuffledOptions = [...q.options];
    for (let i = shuffledOptions.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [shuffledOptions[i], shuffledOptions[j]] = [shuffledOptions[j], shuffledOptions[i]];
    }

    // üéØ Render shuffled options
    shuffledOptions.forEach(option => {
        const label = document.createElement("label");
        label.className = "option";
        label.innerHTML = `<input type="radio" name="answer" value="${option}"> ${option}`;
        formEl.appendChild(label);
    });

    resultEl.textContent = "";
}

nextBtn.addEventListener("click", () => {
    const selected = formEl.answer?.value;

    if (!selected) {
        showAlert("Please choose an answer!");
        return;
    }

    if (selected === quizData[currentQuestion].correct) {
        score++;
    }

    currentQuestion++;

    if (currentQuestion < quizData.length) {
        loadQuestion();
    } else {
        showFinalResult();
    }
});

function showFinalResult() {
    questionEl.textContent = "Quiz Completed!";
    formEl.innerHTML = "";
    nextBtn.style.display = "none";

    resultEl.innerHTML = `üéâ You scored <strong>${score}</strong> out of <strong>${quizData.length}</strong>.`;

    // Save score in localStorage
    localStorage.setItem("lastScore", score);
    savedScoreEl.innerHTML = `
      üìù Question Scope: ${selectedLessonNames}<br>
      üìå Last Score: <strong>${score}</strong>
    `;

    // ‚úÖ Add back button at the bottom
    const bottomActions = document.getElementById("bottom-actions");
    if (!bottomActions) {
        console.error("‚ùå bottom-actions element not found in HTML");
        return;
    }

    const backBtn = document.createElement("button");
    backBtn.textContent = "Back to Lesson Selection";
    backBtn.className = "back-btn";
    backBtn.onclick = () => {
        window.location.href = "index.html";
    };

    bottomActions.innerHTML = ""; // clear if any
    bottomActions.appendChild(backBtn);
}

window.addEventListener("DOMContentLoaded", () => {
    loadQuestion();
});

function showAlert(message) {
  document.getElementById("alert-message").textContent = message;
  document.getElementById("overlay-alert").classList.remove("hidden");
}

function hideAlert() {
  document.getElementById("overlay-alert").classList.add("hidden");
}